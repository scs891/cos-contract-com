{
	"compiler": {
		"version": "0.5.16+commit.9c3226ce"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_factory",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_WETH",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountADesired",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountBDesired",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountBMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "addLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenDesired",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "addLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					}
				],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveOut",
						"type": "uint256"
					}
				],
				"name": "getAmountIn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveOut",
						"type": "uint256"
					}
				],
				"name": "getAmountOut",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					}
				],
				"name": "getAmountsIn",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					}
				],
				"name": "getAmountsOut",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveB",
						"type": "uint256"
					}
				],
				"name": "quote",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountBMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "approveMax",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "removeLiquidityETHWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "liquidity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountAMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountBMin",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "approveMax",
						"type": "bool"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "removeLiquidityWithPermit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountA",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountB",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapETHForExactTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactETHForTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactTokensForETH",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountInMax",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "path",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapTokensForExactETH",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": {
					"details": "添加流动性方法",
					"params": {
						"amountADesired": "期望数量A",
						"amountAMin": "最小数量A",
						"amountBDesired": "期望数量B",
						"amountBMin": "最小数量B",
						"deadline": "最后期限",
						"to": "to地址",
						"tokenA": "tokenA地址",
						"tokenB": "tokenB地址"
					},
					"return": "amountA   数量AamountB   数量Bliquidity   流动性数量"
				},
				"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
					"details": "添加ETH流动性方法",
					"params": {
						"amountETHMin": "ETH最小数量",
						"amountTokenDesired": "Token期望数量",
						"amountTokenMin": "Token最小数量",
						"deadline": "最后期限",
						"to": "to地址",
						"token": "token地址"
					},
					"return": "amountToken   Token数量amountETH   ETH数量liquidity   流动性数量"
				},
				"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": {
					"details": "移除流动性",
					"params": {
						"amountAMin": "最小数量A",
						"amountBMin": "最小数量B",
						"deadline": "最后期限",
						"liquidity": "流动性数量",
						"to": "to地址",
						"tokenA": "tokenA地址",
						"tokenB": "tokenB地址"
					},
					"return": "amountA   数量AamountB   数量B"
				},
				"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": {
					"details": "移除ETH流动性",
					"params": {
						"amountETHMin": "ETH最小数量",
						"amountTokenMin": "token最小数量",
						"deadline": "最后期限",
						"liquidity": "流动性数量",
						"to": "to地址",
						"token": "token地址"
					},
					"return": "amountToken   token数量amountETH   ETH数量"
				},
				"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
					"details": "带签名移除ETH流动性",
					"params": {
						"amountETHMin": "ETH最小数量",
						"amountTokenMin": "token最小数量",
						"approveMax": "全部批准",
						"deadline": "最后期限",
						"liquidity": "流动性数量",
						"r": "r",
						"s": "s",
						"to": "to地址",
						"token": "token地址",
						"v": "v"
					},
					"return": "amountToken   token数量amountETH   ETH数量"
				},
				"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
					"details": "带签名移除流动性",
					"params": {
						"amountAMin": "最小数量A",
						"amountBMin": "最小数量B",
						"approveMax": "全部批准",
						"deadline": "最后期限",
						"liquidity": "流动性数量",
						"r": "r",
						"s": "s",
						"to": "to地址",
						"tokenA": "tokenA地址",
						"tokenB": "tokenB地址",
						"v": "v"
					},
					"return": "amountA   数量AamountB   数量B"
				},
				"swapETHForExactTokens(uint256,address[],address,uint256)": {
					"details": "使用尽量少的ETH交换精确的token",
					"params": {
						"amountOut": "精确输出数额",
						"deadline": "最后期限",
						"path": "路径数组",
						"to": "to地址"
					},
					"return": "amounts[]  数额数组"
				},
				"swapExactETHForTokens(uint256,address[],address,uint256)": {
					"details": "根据精确的ETH交换尽量多的token",
					"params": {
						"amountOutMin": "最小输出数额",
						"deadline": "最后期限",
						"path": "路径数组",
						"to": "to地址"
					},
					"return": "amounts[]  数额数组"
				},
				"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": {
					"details": "根据精确的token交换尽量多的ETH",
					"params": {
						"amountIn": "精确输入数额",
						"amountOutMin": "最小输出数额（hard code）",
						"deadline": "最后期限（时间限制）",
						"path": "路径数组（token地址， ether 地址）",
						"to": "to地址 （用户地址）"
					},
					"return": "amounts[]  数额数组"
				},
				"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": {
					"details": "使用尽量少的token交换精确的ETH",
					"params": {
						"amountInMax": "最大输入数额",
						"amountOut": "精确输出数额",
						"deadline": "最后期限",
						"path": "路径数组",
						"to": "to地址"
					},
					"return": "amounts[]  数额数组"
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/UniswapV2Router01.sol": "UniswapV2Router01"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/UniswapV2Router01.sol": {
			"keccak256": "0x0a94a500616bf0542e698bd3969cdbbe7c0fe2e140e34baed8889999ac9e612b",
			"urls": [
				"bzz-raw://bedf50fc3cd8b87aae18115f5f02edbb904605167cefd6c88177071b33890e81",
				"dweb:/ipfs/QmQGmksbMZFmp2AERxmcwpuCTvctNANnSTZqTQmxv5LGNw"
			]
		},
		"contracts/interfaces/IUniswapV2Router01.sol": {
			"keccak256": "0xc3d262dab384b8a8507990a618a1def0a8d2fb1f7ae69c8f365291353a320ab8",
			"urls": [
				"bzz-raw://e782b1367c0609c47c3b00a6a31c6ea5fd82205b51e2876c44835498abf1debb",
				"dweb:/ipfs/QmdQdMvmbEGzZdndabY46ug47Mauk1pCy9J2sAjvzQ3szw"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0x0c5f6716d15a30a0cc9162402cf5767d30c9ed111366fb610e49a2f924632192",
			"urls": [
				"bzz-raw://a0eb27d0794a25fe1f69f0fcf89b77d5bcd9bb0b0fdf065825b95078a38855a1",
				"dweb:/ipfs/QmR78GAcd7Qp5dYkkmbYmWuNzUui7hgNdTEYdy5c2hyTe8"
			]
		},
		"contracts/libraries/TransferHelper.sol": {
			"keccak256": "0x91d88fab8a620408f06a0f3e8c4fd3b41aae121d77fb9689daa370ab37742bf9",
			"urls": [
				"bzz-raw://9afdf659bdd2018ef11eadab0595b0cc77614f854cfb292e8110a8ad194f514c",
				"dweb:/ipfs/Qma1m3uhgChBCyt6fu1J7AFYEA1qXurPyNbhymS1ksMtSh"
			]
		},
		"contracts/libraries/UniswapV2Library.sol": {
			"keccak256": "0x225fa64c8b7622097b019bc57a1bb3e8eada49779de7f605b475f94059654f9d",
			"urls": [
				"bzz-raw://2604be3b01a26dffaca1a8dc7643e149580d7afc33453d0b56960c570b62f52c",
				"dweb:/ipfs/QmY89CudH15D2MWQjxmPn91VsnnTiKYFUeuUdu6CCQCUfq"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4",
			"urls": [
				"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763",
				"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N"
			]
		},
		"uniswap_core/contracts/UniswapV2ERC20.sol": {
			"keccak256": "0x17c66fdfa335e4aa2e8e2948bacc0c193d4f89040cc429fc9cef8b7aba47a03a",
			"urls": [
				"bzz-raw://22ae75f03916d04c0563bb0b06e16368fe1392872dcc12d029f70f564489112c",
				"dweb:/ipfs/QmUaA3W8HvvVpm4pXC7R9b2z3d6s3xiePfgE74fkPimrWv"
			]
		},
		"uniswap_core/contracts/UniswapV2Pair.sol": {
			"keccak256": "0x1994ca6c4fd31bf28ecbef4581bbcd7d43dce956f088b0d2aadfee8539c099bb",
			"urls": [
				"bzz-raw://cf7bd98af6896d93132f8f667d6275af953b78d542a87018a0ec4d46ffa189c9",
				"dweb:/ipfs/QmaGzVmgE9qcSoomYkYpXeCoD31e3BcmF4qCneTqo6jUBH"
			]
		},
		"uniswap_core/contracts/interfaces/IERC20.sol": {
			"keccak256": "0xa791b279660ee5eb66ebd4f23b539055d178ae24677f3a164567441ecfdcf73a",
			"urls": [
				"bzz-raw://06f36f585a8b82eb388ccccc4e8c483718a99a07f5f12d3217afc254ab139a68",
				"dweb:/ipfs/Qmedr3aAH6F3ZTgZJ3enoP92ZD8yNwiCStwtGknNXhiK8v"
			]
		},
		"uniswap_core/contracts/interfaces/IUniswapV2Callee.sol": {
			"keccak256": "0x514f1fef54c3ec96f0a9b4fbf4980ad71e8ffb237cfc8e872f18ad5d7a199cac",
			"urls": [
				"bzz-raw://33ea4f734ba9e3435cda61424cd7ed392d4b915b5fba33e8625807b08c6b9f77",
				"dweb:/ipfs/QmfSZ3J1ZJHfdX1RUFc3sKn4vpWJRBpaJnvLTgQLUsggcQ"
			]
		},
		"uniswap_core/contracts/interfaces/IUniswapV2ERC20.sol": {
			"keccak256": "0xda3ed72159ac8321b9ee8b67893e0d42ac6f8180b8e1112e8724a9093a409541",
			"urls": [
				"bzz-raw://db4c5c04309ae947a14a464f22f37b76225749248eff9a6a9e184f314531533e",
				"dweb:/ipfs/QmaNHx4uQ79xhQ3SgCK4NodQR11oc4DRtkPGLqGSpB7jei"
			]
		},
		"uniswap_core/contracts/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0xbb02a490e88409dec5dd348332da3209c143899810f7b09c6daacd5c0e94da87",
			"urls": [
				"bzz-raw://29423a8d67eb9fafdacc511cef6465f1251d1b60b522a1fd9bdce70fab08ee0a",
				"dweb:/ipfs/QmfBVeA6RwP7tQdWoFHMHNrpS169cyuM28qDznG6LZ4Aig"
			]
		},
		"uniswap_core/contracts/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x6e301cd1c669825e95796a549af46ea9214abad484a2d687c9a8f4d3953457af",
			"urls": [
				"bzz-raw://1de1663b461dd369ecf043124025f4ce78fe281d6e972180012423584b9bb1ed",
				"dweb:/ipfs/QmNfYrPwNekvVs8nJLXp9v2b5AUMNUm7T7nNd9xdqozX7L"
			]
		},
		"uniswap_core/contracts/libraries/Math.sol": {
			"keccak256": "0x59371bbb24653eabdec42dd004bc94c70536bd655b007b3175c89561597b258b",
			"urls": [
				"bzz-raw://a17afc98200f4dacc7a1b15adcdc6515abfbf42d78354d530e9df5966c301976",
				"dweb:/ipfs/QmeNz4PfMKN2nAmNxSBqVrWw6g1b3EpRa4ZuDpHq7kafh7"
			]
		},
		"uniswap_core/contracts/libraries/SafeMath.sol": {
			"keccak256": "0xb35283807a3600a1df7abff9d82a7f8b563711333cb769bb473ed7c9c5b80cb3",
			"urls": [
				"bzz-raw://76578c35c07b8447d0ab87d34b71a2c2ca6995b5888ab9f6127e822e3d3e6e8e",
				"dweb:/ipfs/QmVPaXWUbsXtVZoGaFg1DtcrRP9axX8XWJFy5jfJ9Mknkb"
			]
		},
		"uniswap_core/contracts/libraries/UQ112x112.sol": {
			"keccak256": "0xe3bebc29aac628026f0eb6d0dd10d463b0b796fadfa0a1cfad1ae603c7d56539",
			"urls": [
				"bzz-raw://64b8a2f0b01eb74df50a00182874db88b10104deb8aa51f9125ac138cf394b89",
				"dweb:/ipfs/QmUYuj73nr6hxK5xmHdsq7wQjHuLC9iH6c89pcn9pDPhLF"
			]
		}
	},
	"version": 1
}