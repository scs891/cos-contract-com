{
	"compiler": {
		"version": "0.5.16+commit.9c3226ce"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_iroAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_discoAddress",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"indexed": false,
						"internalType": "struct Proposal.ProposalDetail",
						"name": "proposal",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "index",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "terms",
								"type": "string"
							}
						],
						"indexed": false,
						"internalType": "struct Proposal.PaymentDetail[]",
						"name": "paymentDetails",
						"type": "tuple[]"
					}
				],
				"name": "accepted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum Proposal.ProposalStatus",
						"name": "original",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum Proposal.ProposalStatus",
						"name": "target",
						"type": "uint8"
					}
				],
				"name": "statusChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "voter",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "pos",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "neg",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "voteBt",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct Proposal.Vote",
						"name": "v",
						"type": "tuple"
					}
				],
				"name": "voted",
				"type": "event"
			},
			{
				"constant": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"internalType": "struct Proposal.ProposalDetail",
						"name": "proposal",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "index",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "terms",
								"type": "string"
							}
						],
						"internalType": "struct Proposal.PaymentDetail[]",
						"name": "paymentDetails",
						"type": "tuple[]"
					}
				],
				"name": "accept",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"internalType": "struct Proposal.ProposalDetail",
						"name": "",
						"type": "tuple"
					}
				],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "serialId",
						"type": "string"
					},
					{
						"internalType": "enum Proposal.ProposalStatus",
						"name": "target",
						"type": "uint8"
					}
				],
				"name": "decide",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "string",
						"name": "id",
						"type": "string"
					}
				],
				"name": "discoProposalCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "voter",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "pos",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "neg",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "voteBt",
								"type": "uint256"
							}
						],
						"internalType": "struct Proposal.Vote",
						"name": "v",
						"type": "tuple"
					}
				],
				"name": "doVote",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"internalType": "struct Proposal.ProposalDetail",
						"name": "proposal",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "index",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "terms",
								"type": "string"
							}
						],
						"internalType": "struct Proposal.PaymentDetail[]",
						"name": "paymentDetails",
						"type": "tuple[]"
					}
				],
				"name": "fullSet",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"internalType": "struct Proposal.ProposalDetail",
						"name": "",
						"type": "tuple"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "serialId",
						"type": "string"
					}
				],
				"name": "proposalDetail",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "discoId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "serialId",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "enum Proposal.ProposalStatus",
								"name": "status",
								"type": "uint8"
							},
							{
								"internalType": "enum Proposal.ProposalMode",
								"name": "mode",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "contact",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "payer",
										"type": "address"
									},
									{
										"internalType": "enum Proposal.PaymentMode",
										"name": "mode",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "totalMonths",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "date",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "paymentAmount",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "totalAmount",
										"type": "uint256"
									},
									{
										"internalType": "contract IERC20",
										"name": "token",
										"type": "address"
									},
									{
										"internalType": "contract FundPool",
										"name": "pool",
										"type": "address"
									}
								],
								"internalType": "struct Proposal.Payment",
								"name": "payment",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IRO.ProposerDriver",
										"name": "driver",
										"type": "uint8"
									}
								],
								"internalType": "struct Proposal.ProposerSetup",
								"name": "proposerSetup",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "voteMinSupporters",
										"type": "uint256"
									},
									{
										"internalType": "string",
										"name": "voteMinApprovalPercent",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "voteDurationHours",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "voteEndTime",
										"type": "uint256"
									}
								],
								"internalType": "struct Proposal.VoterSetup",
								"name": "voteSetup",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "blockTime",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "proposer",
								"type": "address"
							}
						],
						"internalType": "struct Proposal.ProposalDetail",
						"name": "",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "index",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "token",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "terms",
								"type": "string"
							}
						],
						"internalType": "struct Proposal.PaymentDetail[]",
						"name": "paymentDetails",
						"type": "tuple[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "string",
						"name": "id",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "serialId",
						"type": "string"
					}
				],
				"name": "proposalStatus",
				"outputs": [
					{
						"internalType": "enum Proposal.ProposalStatus",
						"name": "",
						"type": "uint8"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "string",
						"name": "discoId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "serialId",
						"type": "string"
					}
				],
				"name": "releaseProposal",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_discoAddress",
						"type": "address"
					}
				],
				"name": "setDiscoBase",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_iroAddress",
						"type": "address"
					}
				],
				"name": "setIROBase",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"userdoc": {
			"methods": {
				"decide(string,string,uint8)": {
					"notice": "decide proposal status.*"
				},
				"discoProposalCount(string)": {
					"notice": "get proposal count.*"
				},
				"doVote((string,string,address,uint256,uint256,uint256))": {
					"notice": "vote when proposal is voting. lock into the fundPool.*"
				},
				"proposalStatus(string,string)": {
					"notice": "get proposal status.*"
				},
				"releaseProposal(string,string)": {
					"notice": "release pool vote token when proposal is not Voting. release pool payment token when proposal is not Pass.*"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Proposal.sol": "Proposal"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Disco.sol": {
			"keccak256": "0xa3ca902063f7f30a8c627d5a59f0108b335ba6800b74db65b66d2810f9c34a72",
			"urls": [
				"bzz-raw://6be6df0c268826868992a85e39944b787a80dff6d8067ee96759f67ec8653cf8",
				"dweb:/ipfs/QmU9AdmEMkpQTfficpyTrZK4ck9PJx2SBWGa3Tujn8e1Xc"
			]
		},
		"contracts/IRO.sol": {
			"keccak256": "0xb8020a7dee170a571a17760c4af07603ac96e156bb7680d1ac2e3ebde7fb59a7",
			"urls": [
				"bzz-raw://6dbe2f39d64d0b413d8de66780026fed4e1e4cd499ae8b0085012998d3aaf577",
				"dweb:/ipfs/QmYNbsMV25vFenyhRqoAWa3tN7BfQu7A2rzcuXTvASs7jP"
			]
		},
		"contracts/Proposal.sol": {
			"keccak256": "0xebfddb568a929418b20117d20adaf022225ec0b3a3126dfa2f1382016a48886b",
			"urls": [
				"bzz-raw://85f9f2edc9a67b51c4b1316825592db1d8d9c8e220fdea0badf716e13f00c5ef",
				"dweb:/ipfs/QmPS2cvV2KY5VsRmZcThwcr4medGYxghNqqHVFeRPdfkV6"
			]
		},
		"contracts/common/Base.sol": {
			"keccak256": "0x0f1c05ea93c4067b43d98be95da03481d65e9db1837fca7ed1afa67633038ffd",
			"urls": [
				"bzz-raw://9095df652230ffae72381fc61feeeb6f59a0e7ea6cea4d51316957c66146bf59",
				"dweb:/ipfs/QmVXLJ4b1aChGhHQEgnwSuPYWz3J1hRG6HkZkN9Su7C7eR"
			]
		},
		"contracts/common/FundPool.sol": {
			"keccak256": "0xfe9c245cc8763501ad1f823e911e5a843c5763968a0d81f0fc1ea1e04c20270e",
			"urls": [
				"bzz-raw://9815e15c77d5b5faae9be550a8258dd00bf9563a2d55c41db31cc3d541853b58",
				"dweb:/ipfs/QmU9NocPA2613fARYRDhA558pCBfhXunc18tTsNPuZNrhS"
			]
		},
		"contracts/interfaces/IErc20.sol": {
			"keccak256": "0xa761d8f37e915c0398d391ef083d59e5759951bc924ebb0e336339e4a2582176",
			"urls": [
				"bzz-raw://f2d9e5a48a6c7b7d71ed96df3bc9696112c52cc8f796965783bc87e59ef84f58",
				"dweb:/ipfs/QmdyoYTMxwUBH1A9Njn5wbFK1g9wNKSbKJa9BD72eXk5g6"
			]
		},
		"contracts/interfaces/IUniswapV2Router01.sol": {
			"keccak256": "0xc3d262dab384b8a8507990a618a1def0a8d2fb1f7ae69c8f365291353a320ab8",
			"urls": [
				"bzz-raw://e782b1367c0609c47c3b00a6a31c6ea5fd82205b51e2876c44835498abf1debb",
				"dweb:/ipfs/QmdQdMvmbEGzZdndabY46ug47Mauk1pCy9J2sAjvzQ3szw"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0x0c5f6716d15a30a0cc9162402cf5767d30c9ed111366fb610e49a2f924632192",
			"urls": [
				"bzz-raw://a0eb27d0794a25fe1f69f0fcf89b77d5bcd9bb0b0fdf065825b95078a38855a1",
				"dweb:/ipfs/QmR78GAcd7Qp5dYkkmbYmWuNzUui7hgNdTEYdy5c2hyTe8"
			]
		},
		"contracts/libraries/NumUtils.sol": {
			"keccak256": "0xaeb9138d0c1305d7b106b0d8dd914dab3de326da1e311717a9ce071bb5cf4473",
			"urls": [
				"bzz-raw://a45f71222669b65d80bae8f8a3079788c8e9bc96c4e56b704a89e419f93c9ae0",
				"dweb:/ipfs/QmYFMbDGF1Gb2fccqe96VJ4PgmMwQNWk97235uWbJi8V7R"
			]
		},
		"contracts/libraries/SafeMath.sol": {
			"keccak256": "0xff29b14172d9f60cb55015c60685a975b114d62a492a858460b31cae8deee276",
			"urls": [
				"bzz-raw://daaf6ae680d5be1d880f91faf8ff8bb037ad25decbe50ff5d21aa0946d9779a7",
				"dweb:/ipfs/QmfNQsrRBVKgGzC41ixvHxnNMpr9mDvu1ZsisMwyU5HChV"
			]
		}
	},
	"version": 1
}